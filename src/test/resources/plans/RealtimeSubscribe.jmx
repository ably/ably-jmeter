<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Realtime Subscribe" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ably.environment" elementType="Argument">
            <stringProp name="Argument.name">ably.environment</stringProp>
            <stringProp name="Argument.value">sandbox</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp App" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <io.ably.jmeter.samplers.SetupAppSampler guiclass="io.ably.jmeter.gui.SetupAppUI" testclass="io.ably.jmeter.samplers.SetupAppSampler" testname="Ably Create Test App" enabled="true">
          <stringProp name="ably.environment">${ably.environment}</stringProp>
        </io.ably.jmeter.samplers.SetupAppSampler>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">true</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown App" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <io.ably.jmeter.samplers.DeleteAppSampler guiclass="io.ably.jmeter.gui.DeleteAppUI" testclass="io.ably.jmeter.samplers.DeleteAppSampler" testname="Ably Delete Test App" enabled="true"/>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Publish" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">4</stringProp>
        <stringProp name="ThreadGroup.delay">2</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <io.ably.jmeter.samplers.RestSampler guiclass="io.ably.jmeter.gui.RestUI" testclass="io.ably.jmeter.samplers.RestSampler" testname="Ably REST Configuration" enabled="true">
          <stringProp name="ably.environment">${ably.environment}</stringProp>
          <stringProp name="ably.api_key">${__P(ably.api_key)}</stringProp>
          <stringProp name="ably.client_id_prefix">client</stringProp>
          <boolProp name="ably.client_id_suffix">true</boolProp>
          <intProp name="ably.log_level">4</intProp>
        </io.ably.jmeter.samplers.RestSampler>
        <hashTree/>
        <io.ably.jmeter.samplers.RestPubSampler guiclass="io.ably.jmeter.gui.RestPubSamplerUI" testclass="io.ably.jmeter.samplers.RestPubSampler" testname="Ably REST Publish" enabled="true">
          <stringProp name="ably.channel_name_prefix">test_channel</stringProp>
          <boolProp name="ably.channel_name_suffix">false</boolProp>
          <stringProp name="ably.message_event_name">test-event</stringProp>
          <stringProp name="ably.message_encoding"></stringProp>
          <boolProp name="ably.add_timestamp">true</boolProp>
          <stringProp name="ably.message_type">String</stringProp>
          <stringProp name="ably.message_type_fixed_length">1024</stringProp>
          <stringProp name="ably.message_to_send">Test message</stringProp>
        </io.ably.jmeter.samplers.RestPubSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Realtime Subscribe" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <io.ably.jmeter.samplers.ConnectSampler guiclass="io.ably.jmeter.gui.ConnectSamplerUI" testclass="io.ably.jmeter.samplers.ConnectSampler" testname="Ably Connect" enabled="true">
          <stringProp name="ably.environment">${ably.environment}</stringProp>
          <stringProp name="ably.api_key">${__P(ably.api_key)}</stringProp>
          <stringProp name="ably.client_id_prefix">client</stringProp>
          <boolProp name="ably.client_id_suffix">true</boolProp>
          <intProp name="ably.log_level">4</intProp>
        </io.ably.jmeter.samplers.ConnectSampler>
        <hashTree/>
        <io.ably.jmeter.samplers.RealtimeSubSampler guiclass="io.ably.jmeter.gui.RealtimeSubSamplerUI" testclass="io.ably.jmeter.samplers.RealtimeSubSampler" testname="Ably Realtime Subscribe" enabled="true">
          <stringProp name="ably.channel_name_prefix">test_channel</stringProp>
          <boolProp name="ably.add_timestamp">true</boolProp>
          <boolProp name="ably.debug_response">true</boolProp>
          <stringProp name="ably.sample_condition">number of received messages</stringProp>
          <intProp name="ably.sample_condition_value">1</intProp>
        </io.ably.jmeter.samplers.RealtimeSubSampler>
        <hashTree/>
        <io.ably.jmeter.samplers.DisconnectSampler guiclass="io.ably.jmeter.gui.DisconnectSamplerUI" testclass="io.ably.jmeter.samplers.DisconnectSampler" testname="Ably Disconnect" enabled="true"/>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
